@model BookingMovieTickets.VIewModel.SeatVM
@using BookingMovieTickets.VIewModel
@{
    ViewData["Title"] = "Chọn ghế";
}
<br />
<div>
    <h5>Thông tin phòng: </h5>
    <h1>@Model.TheatreRoom.RoomName</h1>
</div>

<h1>SelectSeats</h1>
<form asp-action="BookTickets" asp-controller="BookingTicket" method="post">
    <input type="hidden" name="FilmId" value="@Model.Film.FilmId" />
@*     <input type="hidden" name="FilmScheduleId" value="@Model.FilmScheduleId" />
    <input type="hidden" name="TheatreRoomId" value="@Model.TheatreRoomId" /> *@
  
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="seat-container container-fluid">
                    @if (Model.Seats.Count() > 0)
                    {
                        @for (int i = 0; i < Model.Seats.Count(); i = i + 9)
                        {
                            <div class="seat-row">
                                @foreach (var seat in Model.Seats.Skip(i).Take(9))
                                {
                                    <div class="seat @(seat.IsBooked ? "booked" : "")">
                                        <img src="~/images/images.png" alt="Seat Icon" /> 
                                        <span class="seat-number">@seat.SeatNumber</span>
                                    </div>
                                }
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-md-12">
                <div class="text-center">
                    <div class="d-inline-block mr-2">
                        <a asp-action="FilmDetailView" asp-area="" asp-route-id="@Model.Film.FilmId" asp-controller="Home" class="btn btn-success">Trở về</a>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <button type="submit" class="btn btn-primary">Đặt Vé</button>
</form>


<script>
    const ListTime = document.querySelectorAll('.time-select__item')
    const ListSeat = document.querySelectorAll('.seat')

    console.log(ListTime,ListSeat);

    ListTime.forEach(time => {
        time.addEventListener('click', function () {
            
            // Loại bỏ class "active" từ tất cả các phần tử
            ListTime.forEach(item => {
                item.classList.remove('active');
            });
            // Thêm class "active" vào phần tử được click
            time.classList.add('active');
        })
    })

    ListSeat.forEach(seat => {
        seat.addEventListener('click', function () {
            
            seat.classList.toggle('active');
        })
    })
</script>

<style>
    .seat {
        width: 80px; /* Set a fixed width for the seat */
        height: 60px; /* Set a fixed height for the seat */
        display: flex;
        flex-direction: column;
        align-items: center; /* Center the content vertically */
        justify-content: center; /* Center the content horizontally */
        border: 1px solid #ccc; /* Add a border for better visibility */
        margin-right: 10px; /* Add margin between seats */
        cursor:pointer;
    }

    .seat-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 10px; /* Adjust the gap between seats as needed */
    }

    .booked {
        background-color: red; /* Color for booked seats */
    }

    .seat-row {
        display: flex;
        justify-content: center; /* Center the seats horizontally */
        margin-bottom: 10px; /* Add margin between rows */
    }

    .seat img {
        width: 24px; /* Adjust the size of the seat icon */
        height: 24px;
        margin-right: 5px;
    }

    .seat-number {
        font-weight: bold;
    }

    .seat.active{
        background-color: deepskyblue;
    }

</style>

